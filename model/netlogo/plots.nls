to updatePlots 
  
  let l_surf_parcelle []
  let dada [parcelle-id] of patches
  let repartition-histogram [taille-troupeau] of cuisines 
  let propri [who] of cuisines

  
  ;; repetition des identités des cuisines autant de fois que de troupeaux pour construire l'histogramme de têtes de bétail 
  let rep-who-bestiaux []
  ask cuisines [
    set rep-who-bestiaux lput (n-values  taille-troupeau [who]) rep-who-bestiaux
  ]
  set rep-who-bestiaux reduce sentence (rep-who-bestiaux)
  
  
  
  set-current-plot "patchs par parcelle"
  ;;pour réaliser un histogram on a besoin d'une liste
  set-plot-x-range 1 ( (max dada) + 5)
  set-histogram-num-bars 30
  histogram dada
  
  set-current-plot "patchs par cuisine"
  ;;pour réaliser un histogram on a besoin d'une liste
  set-plot-x-range -1 ( (max propri) )
  ;;faire max de max propri,1 si propri restant est de who 0
  set-histogram-num-bars count cuisines
  histogram propri 
  
  set-current-plot "bilan cuisine"
  ask cuisines [
    set-plot-pen-color color ;pour renvoyer la couleur du fermier
    plotxy ticks bilan-nourriture
    ]
  
  set-current-plot "emigration/immigration"
  ask cuisines [
    set-plot-pen-color color ;pour renvoyer la couleur du fermier
    plotxy ticks (entrants - sortants)
    ]
  
  set-current-plot "Population totale"
  set population-totale populationsize


  set-current-plot "Troupeaux par cuisine"
  ;;pour réaliser un histogram on a besoin d'une liste
  set-plot-x-range -1 ( nb-cuisines + 1  )
  set-histogram-num-bars count cuisines 
  histogram rep-who-bestiaux

  
<<<<<<< Updated upstream:model/netlogo/plots.nls
<<<<<<< Updated upstream:model/netlogo/plots.nls
  set-current-plot "Fertilite cuisine"
  ask cuisines [
    let myParcelles patches with [member? parcelle-id [idmyParcellesSorted] of myself]
    set-plot-pen-color color ;pour renvoyer la couleur du fermier
    plotxy ticks sum [fertilite] of myParcelles / count myParcelles
  ]
=======
=======
>>>>>>> Stashed changes:toymodel/plots.nls
set-current-plot "Fertilite cuisine"
ask cuisines [
    let myParcelles patches with [member? parcelle-id [idmyParcellesSorted] of myself]
    set-plot-pen-color color ;pour renvoyer la couleur du fermier
    plotxy ticks sum [fertilite] of myParcelles / count myParcelles
    ]
<<<<<<< Updated upstream:model/netlogo/plots.nls
>>>>>>> Stashed changes:toymodel/plots.nls
=======
>>>>>>> Stashed changes:toymodel/plots.nls
  
end

to MAJ-teinte
  
  
ask cuisines [
 
    
     if update-fertilite-teinte [
    ask patches with [proprietaire = myself][
   
    ;; MAJ teinte 
     
   
        set pcolor scale-color red fertilite 0 110 
      
    ]]
    
     if update-fertilite-teinte = false [
   
       ask patches with [proprietaire = myself][
   
      ;;show proprietaire
      ;; on revient à la couleur de la cuiisine non teintée
      set pcolor [color]  of myself 
    ]
    ]
  
  ]  
end

